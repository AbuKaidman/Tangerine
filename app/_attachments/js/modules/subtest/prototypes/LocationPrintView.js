// Generated by CoffeeScript 1.3.3
(function() {
  var LocationPrintView,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  LocationPrintView = (function(_super) {

    __extends(LocationPrintView, _super);

    function LocationPrintView() {
      return LocationPrintView.__super__.constructor.apply(this, arguments);
    }

    LocationPrintView.prototype.events = {
      "click .school_list li": "autofill",
      "keyup input": "showOptions",
      "click .clear": "clearInputs"
    };

    LocationPrintView.prototype.initialize = function(options) {
      var i, level, location, locationData, template, _i, _j, _k, _len, _len1, _len2, _ref, _ref1;
      this.model = this.options.model;
      this.parent = this.options.parent;
      this.levels = this.model.get("levels") || [];
      this.locations = this.model.get("locations") || [];
      if (this.levels.length === 1 && this.levels[0] === "") {
        this.levels = [];
      }
      if (this.locations.length === 1 && this.locations[0] === "") {
        this.locations = [];
      }
      this.haystack = [];
      _ref = this.locations;
      for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {
        location = _ref[i];
        this.haystack[i] = [];
        for (_j = 0, _len1 = location.length; _j < _len1; _j++) {
          locationData = location[_j];
          this.haystack[i].push(locationData.toLowerCase());
        }
      }
      template = "<li data-index='{{i}}'>";
      _ref1 = this.levels;
      for (i = _k = 0, _len2 = _ref1.length; _k < _len2; i = ++_k) {
        level = _ref1[i];
        template += "{{level_" + i + "}}";
        if (i !== this.levels.length - 1) {
          template += " - ";
        }
      }
      template += "</li>";
      return this.li = _.template(template);
    };

    LocationPrintView.prototype.render = function() {
      var html, i, level, schoolListElements, _i, _len, _ref;
      schoolListElements = "";
      html = "      <button class='clear command'>Clear</button>      ";
      _ref = this.levels;
      for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {
        level = _ref[i];
        html += "        <div class='label_value'>          <label for='level_" + i + "'>" + level + "</label><br>          <input data-level='" + i + "' id='level_" + i + "' value=''>        </div>        <div id='autofill_" + i + "' class='autofill' style='display:none'>          <h2>Select one from autofill list</h2>          <ul class='school_list' id='school_list_" + i + "'>          </ul>        </div>    ";
      }
      this.$el.html(html);
      return this.trigger("rendered");
    };

    return LocationPrintView;

  })(Backbone.View);

}).call(this);
