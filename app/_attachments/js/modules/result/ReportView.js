// Generated by CoffeeScript 1.3.3
var ReportView,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

ReportView = (function(_super) {

  __extends(ReportView, _super);

  function ReportView() {
    return ReportView.__super__.constructor.apply(this, arguments);
  }

  ReportView.prototype.initialize = function(options) {
    var allResults,
      _this = this;
    this.assessmentId = options.assessmentId;
    console.log("Initializing ReportView: " + this.assessmentId);
    allResults = new Results;
    return allResults.fetch({
      success: function(collection) {
        var grid;
        console.log(collection);
        return _this.grids = collection.where({
          assessmentId: _this.assessmentId,
          prototype: "grid"
        }, console.log(_this.grids), (function() {
          var _i, _len, _ref, _results;
          _ref = this.grids;
          _results = [];
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            grid = _ref[_i];
            _results.push(console.log(grid));
          }
          return _results;
        }).call(_this));
      }
    });
  };

  ReportView.prototype.render = function() {
    return this.trigger("rendered");
  };

  return ReportView;

})(Backbone.View);
